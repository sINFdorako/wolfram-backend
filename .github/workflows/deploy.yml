name: Deploy to Server

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    env: 
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
      NODE_APP_PATH: ${{ secrets.NODE_APP_PATH }}
      POSTGRES_DATA_PATH: ${{ secrets.POSTGRES_DATA_PATH }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Echo environment variables for debugging this shit
      run: |
        echo POSTGRES_USER=$POSTGRES_USER
        echo POSTGRES_HOST=$POSTGRES_HOST

    - name: Building fresh images
      run: docker-compose -f ./docker-compose.local.yml build nodejs postgres 
    
    - name: Starting docker compose
      run: docker-compose -f ./docker-compose.local.yml up -d nodejs postgres 

    - name: Install dependencies inside the container
      run: docker exec -t nodejs npm install 

    - name: Run tests inside the container
      run: docker exec -t nodejs npm test

    - name: Cleanup Docker containers
      if: always()
      run: docker-compose -f ./docker-compose.local.yml down

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Deploy to server
      env:
        DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        HOST: ${{ secrets.SERVER_HOST }}
        USER: ${{ secrets.SERVER_USER }}
        PORT: ${{ secrets.SERVER_PORT }}
      run: |
        mkdir -p ~/.ssh/
        echo "$DEPLOY_SSH_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p $PORT $HOST >> ~/.ssh/known_hosts
        ssh -p $PORT $USER@$HOST 'cd /home/wolfram-backend && git pull'
